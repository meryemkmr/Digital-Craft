{"ast":null,"code":"let cartReducer = (state, action) => {\n  // check  if state exists\n  if (state == undefined) {\n    state = {\n      totalCost: 0,\n      productCart: []\n    };\n  }\n\n  switch (action.type) {\n    case 'addProduct':\n      return { ...state,\n        totalCost: state.totalCost + parseInt(action.productData.productPrice),\n        productCart: state.productCart.concat(action.productData)\n      };\n\n    case \"deleteProduct\":\n      let updateArray = state.productCart.filter(productObj => {\n        return productObj.productName != action.productData.productName;\n      });\n      return { ...state,\n        totalCost: state.totalCost - parseInt(action.productData.productPrice),\n        productCart: updateArray\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/meryemkomur/digitalCraft/13-week/0-monday/lectures/shopping-card/src/reducers/cartReducer.js"],"names":["cartReducer","state","action","undefined","totalCost","productCart","type","parseInt","productData","productPrice","concat","updateArray","filter","productObj","productName"],"mappings":"AAAA,IAAIA,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAChC;AACA,MAAGD,KAAK,IAAIE,SAAZ,EAAsB;AAClBF,IAAAA,KAAK,GAAE;AACHG,MAAAA,SAAS,EAAC,CADP;AAEHC,MAAAA,WAAW,EAAC;AAFT,KAAP;AAMH;;AACD,UAAOH,MAAM,CAACI,IAAd;AACI,SAAK,YAAL;AACI,aAAM,EACF,GAAGL,KADD;AAEFG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,GAAkBG,QAAQ,CAACL,MAAM,CAACM,WAAP,CAAmBC,YAApB,CAFnC;AAGFJ,QAAAA,WAAW,EAAEJ,KAAK,CAACI,WAAN,CAAkBK,MAAlB,CAAyBR,MAAM,CAACM,WAAhC;AAHX,OAAN;;AASJ,SAAK,eAAL;AACI,UAAIG,WAAW,GAAGV,KAAK,CAACI,WAAN,CAAkBO,MAAlB,CAAyBC,UAAU,IAAG;AACpD,eAAOA,UAAU,CAACC,WAAX,IAA0BZ,MAAM,CAACM,WAAP,CAAmBM,WAApD;AACH,OAFiB,CAAlB;AAIA,aAAO,EACH,GAAGb,KADA;AAEHG,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAAN,GAAkBG,QAAQ,CAACL,MAAM,CAACM,WAAP,CAAmBC,YAApB,CAFlC;AAGHJ,QAAAA,WAAW,EAAEM;AAHV,OAAP;;AAMJ;AACI,aAAOV,KAAP;AAvBR;AAyBH,CAnCD;;AAoCA,eAAeD,WAAf","sourcesContent":["let cartReducer = (state,action) => {\n    // check  if state exists\n    if(state == undefined){\n        state ={\n            totalCost:0,\n            productCart:[\n                \n            ]\n        }\n    }\n    switch(action.type){\n        case 'addProduct':\n            return{\n                ...state,\n                totalCost: state.totalCost + parseInt(action.productData.productPrice),\n                productCart: state.productCart.concat(action.productData)\n            }\n        \n\n\n\n        case \"deleteProduct\":\n            let updateArray = state.productCart.filter(productObj =>{\n                return productObj.productName != action.productData.productName\n            })\n\n            return {\n                ...state,\n                totalCost: state.totalCost - parseInt(action.productData.productPrice),\n                productCart: updateArray\n            }\n\n        default:\n            return state\n    }\n}\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}